---

# Copyright 2025 Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ClusterID is used for unique identification.
kube_csi_cephfs_cluster_id: ceph

# Ceph monitors.
kube_csi_cephfs_monitors: >-
  {%- set _ns = namespace() -%}
  {%- set _ns._params = [] -%}
  {%- for host in groups['ceph_mon'] -%}
  {%-   set _ns._params = _ns._params + [hostvars[host].ansible_default_ipv4.address + ":6789"] -%}
  {%- endfor -%}
  {{ _ns._params | join(',') }}

# Ceph admin id.
kube_csi_cephfs_admin_id: admin

# Ceph admin secret.
kube_csi_cephfs_admin_secret:

# CephFS filesystem name into which the volume shall be created.
kube_csi_cephfs_fs_name: cephfs

# Ceph pool into which volume data shall be stored.
kube_csi_cephfs_pool: cephfs_data

# SubvolumeGroup contains the name of the SubvolumeGroup for CSI volumes
kube_csi_cephfs_subvolume_group: csi

# The driver can use either ceph-fuse (fuse) or ceph kernelclient
# (kernel).
kube_csi_cephfs_mounter: kernel

# Release name to manage.
kube_csi_cephfs_helm_release_name: ceph-csi-cephfs

# Kubernetes namespace where the chart should be installed.
kube_csi_cephfs_helm_release_namespace: ceph-csi-cephfs

# Value to pass to chart.
kube_csi_cephfs_helm_release_values:
  rbac:
    create: true
    leastPrivileges: false
  csiConfig:
    - clusterID: "{{ kube_csi_cephfs_cluster_id }}"
      monitors: "{{ kube_csi_cephfs_monitors.split(',') | select() | list() }}"
      cephFS:
        subvolumeGroup: "{{ kube_csi_cephfs_subvolume_group }}"
  nodeplugin:
    httpMetrics:
      containerPort: 8681
    podSecurityContext:
      privileged: true
      capabilities:
        add:
          - SYS_ADMIN
      allowPrivilegeEscalation: true
    forcecephkernelclient: true
  provisioner:
    replicaCount: 1
    httpMetrics:
      containerPort: 8681
    provisioner:
      args:
        httpEndpointPort: 8090
    setmetadata: false
    resizer:
      args:
        httpEndpointPort: 8091
    snapshotter:
      args:
        httpEndpointPort: 8092
    podSecurityContext:
      privileged: true
      capabilities:
        add:
          - SYS_ADMIN
      allowPrivilegeEscalation: true
  storageClass:
    create: true
    clusterID: "{{ kube_csi_cephfs_cluster_id }}"
    fsName: "{{ kube_csi_cephfs_fs_name }}"
    pool: "{{ kube_csi_cephfs_pool }}"
    mounter: "{{ kube_csi_cephfs_mounter }}"
  secret:
    create: true
    adminID: "{{ kube_csi_cephfs_admin_id }}"
    adminKey: "{{ kube_csi_cephfs_admin_secret }}"
    userID: "{{ kube_csi_cephfs_admin_id }}"
    userKey: "{{ kube_csi_cephfs_admin_secret }}"
  cephconf: |
    [global]
    auth_cluster_required = cephx
    auth_service_required = cephx
    auth_client_required = cephx
    fuse_set_user_groups = false
    fuse_big_writes = true
